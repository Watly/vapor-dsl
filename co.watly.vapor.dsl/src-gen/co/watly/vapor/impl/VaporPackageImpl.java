/**
 * This work is licensed under the 
 * Creative Commons Attribution-ShareAlike 4.0 International License. 
 * To view a copy of this license, visit 
 * http://creativecommons.org/licenses/by-sa/4.0/ 
 * or send a letter to 
 * Creative Commons, 
 * PO Box 1866, Mountain View, 
 * CA 94042, USA.
 */
/**
 * generated by Xtext 2.13.0
 */
package co.watly.vapor.impl;

import co.watly.vapor.Command;
import co.watly.vapor.CommandBack;
import co.watly.vapor.CommandCommon;
import co.watly.vapor.CommandDown;
import co.watly.vapor.CommandForward;
import co.watly.vapor.CommandLeft;
import co.watly.vapor.CommandRight;
import co.watly.vapor.CommandRotate;
import co.watly.vapor.CommandUp;
import co.watly.vapor.ScheduledFlight;
import co.watly.vapor.VaporFactory;
import co.watly.vapor.VaporPackage;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class VaporPackageImpl extends EPackageImpl implements VaporPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass scheduledFlightEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass commandEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass commandCommonEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass commandUpEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass commandDownEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass commandLeftEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass commandRightEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass commandForwardEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass commandBackEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass commandRotateEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see co.watly.vapor.VaporPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private VaporPackageImpl()
  {
    super(eNS_URI, VaporFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link VaporPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static VaporPackage init()
  {
    if (isInited) return (VaporPackage)EPackage.Registry.INSTANCE.getEPackage(VaporPackage.eNS_URI);

    // Obtain or create and register package
    VaporPackageImpl theVaporPackage = (VaporPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof VaporPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new VaporPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theVaporPackage.createPackageContents();

    // Initialize created meta-data
    theVaporPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theVaporPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(VaporPackage.eNS_URI, theVaporPackage);
    return theVaporPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getScheduledFlight()
  {
    return scheduledFlightEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getScheduledFlight_Date()
  {
    return (EAttribute)scheduledFlightEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getScheduledFlight_Model()
  {
    return (EAttribute)scheduledFlightEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getScheduledFlight_Cost()
  {
    return (EAttribute)scheduledFlightEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getScheduledFlight_Commands()
  {
    return (EReference)scheduledFlightEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCommand()
  {
    return commandEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCommand_Speed()
  {
    return (EAttribute)commandEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCommandCommon()
  {
    return commandCommonEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCommandCommon_Millisecs()
  {
    return (EAttribute)commandCommonEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCommandUp()
  {
    return commandUpEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCommandDown()
  {
    return commandDownEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCommandLeft()
  {
    return commandLeftEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCommandRight()
  {
    return commandRightEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCommandForward()
  {
    return commandForwardEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCommandBack()
  {
    return commandBackEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCommandRotate()
  {
    return commandRotateEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCommandRotate_Degrees()
  {
    return (EAttribute)commandRotateEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VaporFactory getVaporFactory()
  {
    return (VaporFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    scheduledFlightEClass = createEClass(SCHEDULED_FLIGHT);
    createEAttribute(scheduledFlightEClass, SCHEDULED_FLIGHT__DATE);
    createEAttribute(scheduledFlightEClass, SCHEDULED_FLIGHT__MODEL);
    createEAttribute(scheduledFlightEClass, SCHEDULED_FLIGHT__COST);
    createEReference(scheduledFlightEClass, SCHEDULED_FLIGHT__COMMANDS);

    commandEClass = createEClass(COMMAND);
    createEAttribute(commandEClass, COMMAND__SPEED);

    commandCommonEClass = createEClass(COMMAND_COMMON);
    createEAttribute(commandCommonEClass, COMMAND_COMMON__MILLISECS);

    commandUpEClass = createEClass(COMMAND_UP);

    commandDownEClass = createEClass(COMMAND_DOWN);

    commandLeftEClass = createEClass(COMMAND_LEFT);

    commandRightEClass = createEClass(COMMAND_RIGHT);

    commandForwardEClass = createEClass(COMMAND_FORWARD);

    commandBackEClass = createEClass(COMMAND_BACK);

    commandRotateEClass = createEClass(COMMAND_ROTATE);
    createEAttribute(commandRotateEClass, COMMAND_ROTATE__DEGREES);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    commandCommonEClass.getESuperTypes().add(this.getCommand());
    commandUpEClass.getESuperTypes().add(this.getCommandCommon());
    commandDownEClass.getESuperTypes().add(this.getCommandCommon());
    commandLeftEClass.getESuperTypes().add(this.getCommandCommon());
    commandRightEClass.getESuperTypes().add(this.getCommandCommon());
    commandForwardEClass.getESuperTypes().add(this.getCommandCommon());
    commandBackEClass.getESuperTypes().add(this.getCommandCommon());
    commandRotateEClass.getESuperTypes().add(this.getCommand());

    // Initialize classes and features; add operations and parameters
    initEClass(scheduledFlightEClass, ScheduledFlight.class, "ScheduledFlight", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getScheduledFlight_Date(), ecorePackage.getEDate(), "date", null, 0, 1, ScheduledFlight.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getScheduledFlight_Model(), ecorePackage.getEString(), "model", null, 0, 1, ScheduledFlight.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getScheduledFlight_Cost(), ecorePackage.getELong(), "cost", null, 0, 1, ScheduledFlight.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getScheduledFlight_Commands(), this.getCommand(), null, "commands", null, 0, -1, ScheduledFlight.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(commandEClass, Command.class, "Command", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCommand_Speed(), ecorePackage.getEInt(), "speed", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(commandCommonEClass, CommandCommon.class, "CommandCommon", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCommandCommon_Millisecs(), ecorePackage.getEInt(), "millisecs", null, 0, 1, CommandCommon.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(commandUpEClass, CommandUp.class, "CommandUp", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(commandDownEClass, CommandDown.class, "CommandDown", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(commandLeftEClass, CommandLeft.class, "CommandLeft", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(commandRightEClass, CommandRight.class, "CommandRight", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(commandForwardEClass, CommandForward.class, "CommandForward", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(commandBackEClass, CommandBack.class, "CommandBack", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(commandRotateEClass, CommandRotate.class, "CommandRotate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCommandRotate_Degrees(), ecorePackage.getEDouble(), "degrees", null, 0, 1, CommandRotate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //VaporPackageImpl
