/**
 * This work is licensed under the 
 * Creative Commons Attribution-ShareAlike 4.0 International License. 
 * To view a copy of this license, visit 
 * http://creativecommons.org/licenses/by-sa/4.0/ 
 * or send a letter to 
 * Creative Commons, 
 * PO Box 1866, Mountain View, 
 * CA 94042, USA.
 */
/**
 * generated by Xtext 2.13.0
 */
package co.watly.vapor;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see co.watly.vapor.VaporPackage
 * @generated
 */
public interface VaporFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  VaporFactory eINSTANCE = co.watly.vapor.impl.VaporFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Scheduled Flight</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Scheduled Flight</em>'.
   * @generated
   */
  ScheduledFlight createScheduledFlight();

  /**
   * Returns a new object of class '<em>Command</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Command</em>'.
   * @generated
   */
  Command createCommand();

  /**
   * Returns a new object of class '<em>Command Common</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Command Common</em>'.
   * @generated
   */
  CommandCommon createCommandCommon();

  /**
   * Returns a new object of class '<em>Command Up</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Command Up</em>'.
   * @generated
   */
  CommandUp createCommandUp();

  /**
   * Returns a new object of class '<em>Command Down</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Command Down</em>'.
   * @generated
   */
  CommandDown createCommandDown();

  /**
   * Returns a new object of class '<em>Command Left</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Command Left</em>'.
   * @generated
   */
  CommandLeft createCommandLeft();

  /**
   * Returns a new object of class '<em>Command Right</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Command Right</em>'.
   * @generated
   */
  CommandRight createCommandRight();

  /**
   * Returns a new object of class '<em>Command Forward</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Command Forward</em>'.
   * @generated
   */
  CommandForward createCommandForward();

  /**
   * Returns a new object of class '<em>Command Back</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Command Back</em>'.
   * @generated
   */
  CommandBack createCommandBack();

  /**
   * Returns a new object of class '<em>Command Rotate</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Command Rotate</em>'.
   * @generated
   */
  CommandRotate createCommandRotate();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  VaporPackage getVaporPackage();

} //VaporFactory
